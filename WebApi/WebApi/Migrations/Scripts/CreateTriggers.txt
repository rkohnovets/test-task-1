-- Функция для предотвращения изменения значений CreatedAt и UpdatedAt
CREATE OR REPLACE FUNCTION prevent_update_on_readonly_columns()
RETURNS TRIGGER AS $$
BEGIN
    IF TG_OP = 'UPDATE' THEN
        IF NEW."CreatedAt" <> OLD."CreatedAt" THEN
            RAISE EXCEPTION 'Cannot update CreatedAt column';
        END IF;
        IF NEW."CreatedAt" <> OLD."CreatedAt" THEN
            RAISE EXCEPTION 'Cannot update UpdatedAt column';
        END IF;
    END IF;
    RETURN NEW;
END;
$$ LANGUAGE plpgsql;

/*
-- Функция для автоматического обновления UpdatedAt при изменении записи
CREATE OR REPLACE FUNCTION set_updated_at()
RETURNS TRIGGER AS $$
BEGIN
    NEW."UpdatedAt" = NOW();
    RETURN NEW;
END;
$$ LANGUAGE plpgsql;
*/

-- Триггеры для таблицы Contacts
CREATE TRIGGER trigger_contact_prevent_update
BEFORE UPDATE ON "Contacts"
FOR EACH ROW
EXECUTE FUNCTION prevent_update_on_readonly_columns();

/*
CREATE TRIGGER trigger_contact_set_updated_at
BEFORE UPDATE ON "Contacts"
FOR EACH ROW
EXECUTE FUNCTION set_updated_at();
*/

-- Триггеры для таблицы Contractors
CREATE TRIGGER trigger_contractor_prevent_update
BEFORE UPDATE ON "Contractors"
FOR EACH ROW
EXECUTE FUNCTION prevent_update_on_readonly_columns();

/*
CREATE TRIGGER trigger_contractor_set_updated_at
BEFORE UPDATE ON "Contractors"
FOR EACH ROW
EXECUTE FUNCTION set_updated_at();
*/

/*
// Выполнение SQL-скрипта для создания триггеров
migrationBuilder.Sql(File.ReadAllText("Migrations/Scripts/CreateTriggers.txt"));
*/